name: CI

on: [push]

env:
  PYEX_KEY: ${{ secrets.PYEX_KEY }}

jobs:
  test:
    runs-on: [ubuntu-latest]

    steps:
      - name: clone github repository
        uses: actions/checkout@master

      - name: install python3.10
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: install poetry
        run: pip install poetry

      - name: create venv and install stocktrader-core-app dependencies
        run: cd stocktrader && poetry install

      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@master

      - name: create namespace
        run: kubectl create -f namespace.yaml

      - name: create service account
        run: kubectl create -f service-account-deploy.yaml

      - name: create secret
        run: kubectl create -f secret-backend.yaml

      - name: create configmap
        run: kubectl create -f configmap-backend.yaml

      - name: create database headless service
        run: kubectl create -f service-database-headless.yaml

      - name: create database public service
        run: kubectl create -f service-database-public.yaml

      - name: create pv
        run: kubectl create -f pv-database.yaml

      - name: create database
        run: kubectl create -f statefulset-database.yaml

      - name: wait database
        run: kubectl rollout status statefulset statefulset-database -n deploy

      - name: give access to database replication script
        run: chmod +x postgres-replication.sh

      - name: set up database replication
        run: ./postgres-replication.sh

      - name: test
        run: kubectl run -it srvlookup --image=tutum/dnsutils --rm  --restart=Never -- dig SRV service-database-headless.deploy.svc.cluster.local

      - name: run tests for stocktrader-core-app
        run: cd stocktrader && poetry run pytest --cov=.

      - name: run linter for stocktrader-core-app
        run: cd stocktrader && poetry run flake8 .
